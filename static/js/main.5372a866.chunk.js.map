{"version":3,"sources":["services/api.js","pages/Repository/styles.js","components/Container/index.js","pages/Repository/index.js","pages/Main/styles.js","pages/Main/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Loading","styled","div","Owner","header","IssueList","ul","Container","Repository","state","repository","issues","loading","match","this","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","setState","data","to","src","owner","avatar_url","alt","login","name","description","map","issue","key","String","id","user","href","html_url","title","labels","label","Component","Form","form","rotate","keyframes","SubmitButton","button","attrs","type","disabled","css","List","Main","newRepo","repositories","handleInputChange","e","target","value","handleSubmit","a","preventDefault","response","full_name","localStorage","getItem","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","encodeURIComponent","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5372a866.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.github.com/',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n    color: #fff;\n    font-size: 30px;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 110vh;\n`;\n\nexport const Owner = styled.header`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    a {\n        color: #7159c1;\n        font-size: 16px;\n        text-decoration: none;\n    }\n\n    img {\n        width: 120px;\n        border-radius: 50%;\n        margin-top: 20px;\n    }\n    h1 {\n        font-size: 24px;\n        margin-top: 10px;\n    }\n\n    p {\n        margin-top: 10px;\n        font-size: 14px;\n        color: #666;\n        line-height: 1.4;\n        text-align: center;\n        max-width: 400px;\n    }\n`;\n\nexport const IssueList = styled.ul`\n    padding-top: 30px;\n    margin-top: 30px;\n    border-top: 1px solid #eee;\n    list-style: none;\n\n    li {\n        display: flex;\n        padding: 15px 10px;\n        border: 1px solid #eee;\n        border-radius: 4px;\n    }\n\n    & + li {\n        margin-top: 10px;\n    }\n\n    img {\n        width: 36px;\n        height: 36px;\n        border-radius: 50%;\n        border: 2px solid #eee;\n    }\n\n    div {\n        flex: 1;\n        margin-left: 15px;\n    }\n\n    strong {\n        font-size: 16px;\n        a {\n            text-decoration: none;\n            color: #333;\n\n            &:hover {\n                color: #7159c1;\n            }\n        }\n\n        span {\n            background: #eee;\n            color: #333;\n            border-radius: 2px;\n            font-size: 12px;\n            font-weight: 600;\n            height: 20px;\n            padding: 3px 4px;\n            margin-left: 10px;\n        }\n    }\n\n    p {\n        margin-top: 5px;\n        font-size: 12px;\n        color: #999;\n    }\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    max-width: 700px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    padding: 30px;\n    margin: 80px auto;\n\n    h1 {\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        flex-direction: row;\n\n        svg {\n            margin-right: 10px;\n        }\n    }\n`;\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport { Loading, Owner, IssueList } from './styles';\nimport Container from '../../components/Container/index';\n\nexport default class Repository extends Component {\n    static propTypes = {\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                repository: PropTypes.string,\n            }),\n        }).isRequired,\n    };\n\n    state = {\n        repository: {},\n        issues: [],\n        loading: true,\n    };\n\n    async componentDidMount() {\n        const { match } = this.props;\n        const repoName = decodeURIComponent(match.params.repository);\n\n        const [repository, issues] = await Promise.all([\n            api.get(`/repos/${repoName}`),\n            api.get(`/repos/${repoName}/issues`, {\n                params: {\n                    state: 'open',\n                    per_page: 5,\n                },\n            }),\n        ]);\n\n        this.setState({\n            repository: repository.data,\n            issues: issues.data,\n            loading: false,\n        });\n    }\n\n    render() {\n        const { repository, issues, loading } = this.state;\n        if (loading) {\n            return <Loading>Loading...</Loading>;\n        }\n        return (\n            <Container>\n                <Owner>\n                    <Link to=\"/\">Return to home</Link>\n                    <img\n                        src={repository.owner.avatar_url}\n                        alt={repository.owner.login}\n                    ></img>\n                    <h1>{repository.name}</h1>\n                    <p>{repository.description}</p>\n                </Owner>\n\n                <IssueList>\n                    {issues.map(issue => (\n                        <li key={String(issue.id)}>\n                            <img\n                                src={issue.user.avatar_url}\n                                alt={issue.user.login}\n                            ></img>\n                            <div>\n                                <strong>\n                                    <a href={issue.html_url}>{issue.title}</a>\n                                    {issue.labels.map(label => (\n                                        <span key={String(label.id)}>\n                                            {label.name}\n                                        </span>\n                                    ))}\n                                </strong>\n                                <p>{issue.user.login}</p>\n                            </div>\n                        </li>\n                    ))}\n                </IssueList>\n            </Container>\n        );\n    }\n}\n","import styled, { keyframes, css } from 'styled-components';\n\nexport const Form = styled.form`\n    margin-top: 30px;\n    display: flex;\n    flex-direction: row;\n\n    input {\n        flex: 1;\n        border: 1px solid #7159c1;\n        padding: 10px 15px;\n        border-radius: 4px;\n        font-size: 16px;\n    }\n`;\n\nconst rotate = keyframes`\n    from{\n        transform: rotate(0deg)\n    }\n    to{\n        transform: rotate(360deg)\n    }\n`;\n\nexport const SubmitButton = styled.button.attrs(props => ({\n    type: 'submit',\n    disabled: props.loading,\n}))`\n    background: #7159c1;\n    border: 0;\n    padding: 0 15px;\n    margin-left: 10px;\n    border-radius: 4px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &[disabled] {\n        cursor: not-allowed;\n        opacity: 0.6;\n    }\n\n    ${props =>\n        props.loading &&\n        css`\n            svg {\n                animation: ${rotate} 2s linear infinite;\n            }\n        `}\n`;\n\nexport const List = styled.ul`\n    list-style: none;\n    margin-top: 30px;\n\n    li {\n        padding: 15px 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n\n        & + li {\n            border-top: 1px solid #eee;\n        }\n\n        a {\n            color: #7159c1;\n            text-decoration: none;\n        }\n    }\n`;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport { Form, SubmitButton, List } from './styles';\nimport Container from '../../components/Container/index';\n\nexport default class Main extends Component {\n    state = {\n        newRepo: '',\n        repositories: [],\n        loading: false,\n    };\n\n    componentDidMount() {\n        const repositories = localStorage.getItem('repositories');\n        if (repositories) {\n            this.setState({ repositories: JSON.parse(repositories) });\n        }\n    }\n\n    componentDidUpdate(_, prevState) {\n        const { repositories } = this.state;\n        if (prevState.repositories !== repositories) {\n            localStorage.setItem('repositories', JSON.stringify(repositories));\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({ newRepo: e.target.value });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const { newRepo, repositories } = this.state;\n\n        const response = await api.get(`/repos/${newRepo}`);\n\n        const data = {\n            name: response.data.full_name,\n        };\n\n        this.setState({\n            repositories: [...repositories, data],\n            newRepo: '',\n            loading: false,\n        });\n    };\n\n    render() {\n        const { newRepo, loading, repositories } = this.state;\n        return (\n            <Container>\n                <h1>\n                    <FaGithubAlt />\n                    Repositories\n                </h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add repository\"\n                        value={newRepo}\n                        onChange={this.handleInputChange}\n                    />\n                    <SubmitButton loading={loading}>\n                        {loading ? (\n                            <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                            <FaPlus color=\"#FFF\" size={14} />\n                        )}\n                    </SubmitButton>\n                </Form>\n                <List>\n                    {repositories.map(repository => (\n                        <li key={repository.name}>\n                            <span>{repository.name}</span>\n                            <Link\n                                to={`/repository/${encodeURIComponent(\n                                    repository.name\n                                )}`}\n                            >\n                                Details\n                            </Link>\n                        </li>\n                    ))}\n                </List>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Repository from './pages/Repository';\nimport Main from './pages/Main';\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/repository/:repository\" component={Repository} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    html, body, #root{\n        min-height: 100%;\n    }\n\n    body {\n        background: #7159c1;\n        --webkit-font-smoothing: antialiased !important;\n    }\n\n    body, input button {\n        color: #222;\n        font-size: 14px;\n        font-family: Arial, Helvetica, sans-serif;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;\n","import React from 'react';\nimport Routes from './routes';\nimport GlobalStyle from './styles/global';\n\nfunction App() {\n    return (\n        <>\n            <Routes />\n            <GlobalStyle />\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}